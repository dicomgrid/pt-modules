output "accessor" { value = vault_jwt_auth_backend.main.accessor }
# output "allowed_response_headers" { value = vault_jwt_auth_backend.main.allowed_response_headers }
# output "audit_non_hmac_request_keys" { value = vault_jwt_auth_backend.main.audit_non_hmac_request_keys }
# output "audit_non_hmac_response_keys" { value = vault_jwt_auth_backend.main.audit_non_hmac_response_keys }
output "backend" { value = vault_jwt_auth_backend.main }
output "bound_issuer" { value = vault_jwt_auth_backend.main.bound_issuer }
# output "default_lease_ttl" { value = vault_jwt_auth_backend.main.default_lease_ttl }
output "default_role" { value = vault_jwt_auth_backend.main.default_role }
output "description" { value = vault_jwt_auth_backend.main.description }
output "disable_remount" { value = vault_jwt_auth_backend.main.disable_remount }
output "jwks_ca_pem" { value = vault_jwt_auth_backend.main.jwks_ca_pem }
output "jwks_url" { value = vault_jwt_auth_backend.main.jwks_url }
output "jwt_supported_algs" { value = vault_jwt_auth_backend.main.jwt_supported_algs }
output "jwt_validation_pubkeys" { value = vault_jwt_auth_backend.main.jwt_validation_pubkeys }
# output "listing_visibility" { value = vault_jwt_auth_backend.main.listing_visibility }
output "local" { value = vault_jwt_auth_backend.main.local }
# output "max_lease_ttl" { value = vault_jwt_auth_backend.main.max_lease_ttl }
output "namespace_in_state" { value = vault_jwt_auth_backend.main.namespace_in_state }
output "namespace" { value = vault_jwt_auth_backend.main.namespace }
output "oidc_client_id" { value = vault_jwt_auth_backend.main.oidc_client_id }
output "oidc_client_secret" { value = vault_jwt_auth_backend.main.oidc_client_secret }
output "oidc_discovery_ca_pem" { value = vault_jwt_auth_backend.main.oidc_discovery_ca_pem }
output "oidc_discovery_url" { value = vault_jwt_auth_backend.main.oidc_discovery_url }
output "oidc_response_mode" { value = vault_jwt_auth_backend.main.oidc_response_mode }
# output "passthrough_request_headers" { value = vault_jwt_auth_backend.main.passthrough_request_headers }
output "path" { value = vault_jwt_auth_backend.main.path }
output "provider_config" { value = vault_jwt_auth_backend.main.provider_config }
output "role" { value = module.role }
# output "token_type" { value = vault_jwt_auth_backend.main.token_type }
output "type" { value = vault_jwt_auth_backend.main.type }
